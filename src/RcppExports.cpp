// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_HIM_sdetect
arma::vec rcpp_HIM_sdetect(const arma::mat& x, const arma::colvec& y, const arma::mat& xquant, const arma::colvec& yquant, const arma::colvec& inv_rob_sdx, const double rob_sdy, arma::uvec& inf_set, arma::uvec& non_inf_set);
RcppExport SEXP _hidetify_rcpp_HIM_sdetect(SEXP xSEXP, SEXP ySEXP, SEXP xquantSEXP, SEXP yquantSEXP, SEXP inv_rob_sdxSEXP, SEXP rob_sdySEXP, SEXP inf_setSEXP, SEXP non_inf_setSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type xquant(xquantSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type yquant(yquantSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type inv_rob_sdx(inv_rob_sdxSEXP);
    Rcpp::traits::input_parameter< const double >::type rob_sdy(rob_sdySEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type inf_set(inf_setSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type non_inf_set(non_inf_setSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_HIM_sdetect(x, y, xquant, yquant, inv_rob_sdx, rob_sdy, inf_set, non_inf_set));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_asymHIM_sdetect
arma::mat rcpp_asymHIM_sdetect(const arma::mat& x, const arma::colvec& y, const arma::mat& xquant, const arma::colvec& yquant, const arma::colvec& inv_rob_sdx, const double rob_sdy, const arma::colvec& asymvec, arma::uvec& inf_set, arma::uvec& non_inf_set);
RcppExport SEXP _hidetify_rcpp_asymHIM_sdetect(SEXP xSEXP, SEXP ySEXP, SEXP xquantSEXP, SEXP yquantSEXP, SEXP inv_rob_sdxSEXP, SEXP rob_sdySEXP, SEXP asymvecSEXP, SEXP inf_setSEXP, SEXP non_inf_setSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type xquant(xquantSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type yquant(yquantSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type inv_rob_sdx(inv_rob_sdxSEXP);
    Rcpp::traits::input_parameter< const double >::type rob_sdy(rob_sdySEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type asymvec(asymvecSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type inf_set(inf_setSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type non_inf_set(non_inf_setSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_asymHIM_sdetect(x, y, xquant, yquant, inv_rob_sdx, rob_sdy, asymvec, inf_set, non_inf_set));
    return rcpp_result_gen;
END_RCPP
}
// arma_sample
arma::uvec arma_sample(arma::uvec& x, int size, bool replace);
RcppExport SEXP _hidetify_arma_sample(SEXP xSEXP, SEXP sizeSEXP, SEXP replaceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< bool >::type replace(replaceSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_sample(x, size, replace));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_setdiff
arma::uvec rcpp_setdiff(arma::uvec& x, arma::uvec& y);
RcppExport SEXP _hidetify_rcpp_setdiff(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_setdiff(x, y));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_mask_swamp_stat
arma::mat rcpp_mask_swamp_stat(const arma::mat& x, const arma::colvec& y, const arma::mat& xquant, const arma::colvec& yquant, const arma::colvec& inv_rob_sdx, const double rob_sdy, const int number_subset, const int size_subset, arma::uvec& est_clean_set, const arma::colvec& asymvec);
RcppExport SEXP _hidetify_rcpp_mask_swamp_stat(SEXP xSEXP, SEXP ySEXP, SEXP xquantSEXP, SEXP yquantSEXP, SEXP inv_rob_sdxSEXP, SEXP rob_sdySEXP, SEXP number_subsetSEXP, SEXP size_subsetSEXP, SEXP est_clean_setSEXP, SEXP asymvecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type xquant(xquantSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type yquant(yquantSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type inv_rob_sdx(inv_rob_sdxSEXP);
    Rcpp::traits::input_parameter< const double >::type rob_sdy(rob_sdySEXP);
    Rcpp::traits::input_parameter< const int >::type number_subset(number_subsetSEXP);
    Rcpp::traits::input_parameter< const int >::type size_subset(size_subsetSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type est_clean_set(est_clean_setSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type asymvec(asymvecSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_mask_swamp_stat(x, y, xquant, yquant, inv_rob_sdx, rob_sdy, number_subset, size_subset, est_clean_set, asymvec));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_shidetify
arma::mat rcpp_shidetify(const arma::mat x, const arma::colvec y, const arma::mat xquant, const arma::colvec yquant, const arma::colvec inv_rob_sdx, const double rob_sdy, const arma::colvec asymvec, const arma::uvec row_indice);
RcppExport SEXP _hidetify_rcpp_shidetify(SEXP xSEXP, SEXP ySEXP, SEXP xquantSEXP, SEXP yquantSEXP, SEXP inv_rob_sdxSEXP, SEXP rob_sdySEXP, SEXP asymvecSEXP, SEXP row_indiceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type xquant(xquantSEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type yquant(yquantSEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type inv_rob_sdx(inv_rob_sdxSEXP);
    Rcpp::traits::input_parameter< const double >::type rob_sdy(rob_sdySEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type asymvec(asymvecSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type row_indice(row_indiceSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_shidetify(x, y, xquant, yquant, inv_rob_sdx, rob_sdy, asymvec, row_indice));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hidetify_rcpp_HIM_sdetect", (DL_FUNC) &_hidetify_rcpp_HIM_sdetect, 8},
    {"_hidetify_rcpp_asymHIM_sdetect", (DL_FUNC) &_hidetify_rcpp_asymHIM_sdetect, 9},
    {"_hidetify_arma_sample", (DL_FUNC) &_hidetify_arma_sample, 3},
    {"_hidetify_rcpp_setdiff", (DL_FUNC) &_hidetify_rcpp_setdiff, 2},
    {"_hidetify_rcpp_mask_swamp_stat", (DL_FUNC) &_hidetify_rcpp_mask_swamp_stat, 10},
    {"_hidetify_rcpp_shidetify", (DL_FUNC) &_hidetify_rcpp_shidetify, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_hidetify(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
